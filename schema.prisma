// This file is automatically generated by Keystone, do not modify it manually.
// Modify your Keystone config when you want to change this.

datasource postgresql {
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
  provider          = "postgresql"
}

generator client {
  provider = "prisma-client-js"
}

model Person {
  id          String       @id @default(cuid())
  name        String       @default("")
  email       String       @unique @default("")
  password    String?
  isAdmin     Boolean      @default(false)
  memberships Membership[] @relation("Membership_owner")
  profiles    Profile[]    @relation("Profile_owner")
}

model Profile {
  id                               String       @id @default(cuid())
  owner                            Person?      @relation("Profile_owner", fields: [ownerId], references: [id])
  ownerId                          String?      @map("owner")
  nickname                         String       @default("")
  bio                              String       @default("")
  avatar                           String       @default("")
  from_Membership_communityProfile Membership[] @relation("Membership_communityProfile")

  @@index([ownerId])
}

model Community {
  id          String               @id @default(cuid())
  name        String               @default("")
  slug        String               @unique @default("")
  description String               @default("")
  status      CommunityStatusType? @default(PRIVATE)
  memberships Membership[]         @relation("Membership_community")
}

model Membership {
  id                 String     @id @default(cuid())
  owner              Person?    @relation("Membership_owner", fields: [ownerId], references: [id])
  ownerId            String?    @map("owner")
  community          Community? @relation("Membership_community", fields: [communityId], references: [id])
  communityId        String?    @map("community")
  communityProfile   Profile?   @relation("Membership_communityProfile", fields: [communityProfileId], references: [id])
  communityProfileId String?    @map("communityProfile")

  @@index([ownerId])
  @@index([communityId])
  @@index([communityProfileId])
}

enum CommunityStatusType {
  PUBLIC
  PRIVATE
}
